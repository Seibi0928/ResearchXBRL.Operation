version: '3.3'
services:
  front:
    image: harunari/financial_analysis_frontend:stable
    deploy:
      resources:
        reservations:
          cpus: '0.5'
          memory: 0.5G
        limits:
          cpus: '0.5'
          memory: 0.5G
    container_name: frontend-server-production
    ports:
     - 80
  reverse-proxy:
    image: harunari/financial_analysis_reverse_proxy_production:latest
    deploy:
      resources:
        reservations:
          cpus: '0.5'
          memory: 0.5G
        limits:
          cpus: '0.5'
          memory: 0.5G
    ports:
      - "8081:8081"
    depends_on:
      - front
      - api
  api:
    image: harunari/financial_analysis_api:stable
    deploy:
      resources:
        reservations:
          cpus: '0.5'
          memory: 0.5G
        limits:
          cpus: '0.5'
          memory: 0.5G
    container_name: analysis-api-production
    environment:
      DB_SERVERNAME: localhost
      DB_USERID: postgres
      DB_NAME: postgres
      DB_PORT: 5432
      DB_PASSWORD: mysecretpassword
      ASPNETCORE_URLS: http://+:8080
      ASPNETCORE_ENVIRONMENT: Production
    ports:
     - 8080
    depends_on:
     - aquire-financial-reports-batch
  rdb-primary:
    image: harunari/financial_report_primary_database:stable
    deploy:
      resources:
        reservations:
          cpus: '0.2'
          memory: 0.2G
        limits:
          cpus: '1'
          memory: 1G
    container_name: report-rdb-primary-production
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: mysecretpassword
    ports:
      - 5432
  aquire-financial-reports-batch:
    image: harunari/aquire_financial_reports_batch:stable
    deploy:
      resources:
        reservations:
          cpus: '0.5'
          memory: 0.5G
        limits:
          cpus: '2'
          memory: 1G
    environment:
      DB_SERVERNAME: localhost
      DB_USERID: postgres
      DB_NAME: postgres
      DB_PORT: 5432
      DB_PASSWORD: mysecretpassword
    command: > 
      /bin/bash -c "
        # これがないとcron jobで環境変数を読み込めない
        printenv | grep -v "no_proxy" >> /etc/environment;mkdir /etc/cron.d;
        # 毎日午前1時にバッチ実行
        echo '0 1 * * * dotnet /app/AquireFinancialReports.dll >> /var/log/cron.log 2>&1' >> /etc/cron.d/hello-cron2;
        chmod 0644 /etc/cron.d/hello-cron2;
        apt update && apt install -y cron;
        service cron start;
        crontab /etc/cron.d/hello-cron2;
        while sleep 1000; do :; done"
    depends_on:
      - rdb-primary